{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAoB9C,OACI,sBAAMC,SAbW,SAACC,GAClBA,EAAEC,iBAGEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,MAOlB,SACI,uBACIO,KAAK,OACLC,MAAST,EACTU,SArBc,SAAEP,GACxBF,EAAeE,EAAEQ,OAAOF,a,+BCNnBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAWH,GAF/C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCGPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAIjC,OACI,sBAAKc,UAAU,6CAAf,UACI,qBAAKC,IAAOf,EAAKgB,IAAQN,IACzB,kCAAKA,EAAL,WCNCO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDb,SAAEA,GAAe,IAAD,EACdd,mBAAS,CAC/BqB,KAAO,GACPa,SAAS,IAH2B,mBACjCC,EADiC,KAC1BC,EAD0B,KAiBxC,OAXAC,qBAAW,WACPxB,EAAQC,GACPwB,MAAM,SAAAC,GACHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAIlB,CAAEpB,IAEEqB,EDbuBK,CAAa1B,GAA9ByB,EAHwB,EAG9BlB,KAAYa,EAHkB,EAGlBA,QAEnB,OACI,qCACI,qBAAIJ,UAAU,yCAAd,cAAyDhB,EAAzD,OAECoB,GAAW,mBAAGJ,UAAU,wCAAb,wBAEZ,qBAAKA,UAAU,YAAf,SAGQS,EAAKhB,KAAK,SAAAC,GAAG,OACT,cAAC,EAAD,eAEiBA,GADHA,EAAIC,aElB7BgB,EAAe,WAAM,MAGMzC,mBAAS,CAAC,KAHhB,mBAGvB0C,EAHuB,KAGX3C,EAHW,KAU9B,OACI,gCACI,8CAEA,cAAC,EAAD,CAAaA,cAAiBA,IAC9B,uBAIA,6BAEQ2C,EAAWnB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAYA,GADLA,Y,MCpBnC6B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.aaacc184.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ( {setCategories} ) => {\n\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = ( e ) => {\n        setInputValue( e.target.value );\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        // console.log(\"Submit hecho\");\n\n        if (inputValue.trim().length > 2 ) {\n            setCategories( cats => [inputValue, ...cats] );\n            setInputValue('');\n        }\n\n        // setCategories( cats => [...cats, inputValue] );\n    }\n\n    return (\n        <form onSubmit = {handleSubmit}>\n            <input \n                type=\"text\"\n                value = {inputValue }\n                onChange = {handleInputChange}\n            />\n        </form>\n        \n    )\n}\n\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n","\n\nexport const getGifs = async (category) => {\n\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=zcUlQGUUreywSTbmNZOQxb3Ldc439Kto`;\n    const resp = await fetch(url);\n    const {data} = await resp.json();\n\n    const gifs = data.map (img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n\n    return gifs;\n}","import React from 'react'\n\n// export const GifGridItem = ( props ) => {\n    // console.log(props);\n\nexport const GifGridItem = ( {title, url} ) => {\n    \n    // console.log(id, title, img);\n\n    return (\n        <div className=\"card animate__animated animate__fadeInDown\">\n            <img src = {url} alt = { title } />\n            <p> {title} </p>\n        </div>\n    )\n}\n","import React from 'react';\n// import React,{useState, useEffect} from 'react';\n// import { getGifs } from '../helpers/getGifs';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({ category }) => {\n\n    // const [images, setImages] = useState([]);\n    const {data: imgs, loading} = useFetchGifs(category); \n\n    return (\n        <>\n            <h3 className=\"animate__animated animate__slideInDown\"> {category} </h3>\n\n            {loading && <p className=\"animate__animated animate__fadeInLeft\">Loading...</p>}\n\n            <div className=\"card-grid\">\n                \n                {\n                    imgs.map( img => (\n                        <GifGridItem \n                            key =   { img.id }\n                                    { ...img }/>\n                    ))\n                }\n \n            </div>\n        </>\n        \n    )\n}\n","import { useEffect, useState } from \"react\"\nimport { getGifs } from \"../helpers/getGifs\";\n\n\n\nexport const useFetchGifs = ( category ) => {\n    const [state, setstate] = useState({\n        data : [],\n        loading: true\n    });\n\n    useEffect( () => {\n        getGifs(category)\n        .then( imgs => {\n            setstate({\n                data: imgs,\n                loading: false\n            });\n        })\n\n    }, [ category ])\n\n    return state; // donde el estado es \n}","import React, { useState} from 'react';\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nexport const GifExpertApp = () => {\n\n    // const categories = ['Thundercats', 'Transformers', 'Ghostbusters'];\n    const [categories, setCategories] = useState(['']);\n\n    // const handleAdd = () => {\n    //     // setCategories ( [...categories,'Tigersharks']);\n    //     setCategories ( cats => [...categories, 'Tigersharks']);\n    // }\n\n    return (\n        <div>\n            <h2>GifExpertApp</h2>\n            {/* Aqui sucede la comunicación entre componentes por medio de la función setCategories que se envía por referencia. */}\n            <AddCategory setCategories = {setCategories} />\n            <hr />\n\n            {/* <button onClick={ handleAdd }>Agregar</button> */}\n\n            <ol>\n                {\n                    categories.map( category => (\n                        <GifGrid \n                            key = {category}\n                            category = {category}\n                        />\n                    ))\n                }\n            </ol>\n\n        </div>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}